/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// Define layer numbers
#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// Define layer numbers
#define BASE 0
#define BASE_QWERTY 1
#define NAV 2
#define SYM 3
#define NUM 4
#define FUNC 5
#define ADJUST 6
#define LOWER 7


// ZMK includes
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

// Personal includes
#include "includes/settings.dtsi"
#include "includes/settings_pd.dtsi"
#include "includes/conditional_layers.dtsi"
#include "includes/macros.dtsi"
#include "includes/combos.dtsi"
#include "includes/behaviours_homerow_mods.dtsi"
#include "includes/behaviours_mod_morph.dtsi"
#include "includes/behaviours_other.dtsi"


/ {

  /*
   * Keymap generated using https://www.keymapper.dev/
   * Import sofle_keymap.json to view it.
   */

  keymap {
    compatible = "zmk,keymap";

    Base_layer {
      label = "Base";
      bindings = <
        &kp GRAVE &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0 &kp RETURN &mm_grescm &kp Q &kp W &hm_l LS(LC(LG(LALT))) F &kp P &kp B &kp J &kp L &hm_r RS(RC(RG(RALT))) U &kp Y &kp SINGLE_QUOTE &mm_bspc_del &kp TAB &hm_l LCTRL A &hm_l LALT R &hm_l LGUI S &hm_fast_l LSHFT T &kp G &kp M &hm_fast_r RSHFT N &hm_r RGUI E &hm_r RALT I &hm_r RCTRL O &kp SINGLE_QUOTE &td_shift_l &kp Z &kp X &hm_l LC(LG(LALT)) C &kp D &kp V &kp C_MUTE &kp C_PLAY_PAUSE &kp K &kp H &hm_r RC(RG(RALT)) COMMA &kp DOT &kp SLASH &td_shift_r &kp LEFT_ALT &mm_grescm_gui &mm_spc_unds_layer &lt SYM TAB &none &none &mm_bspc_del &lt NUM RETURN &kp RIGHT_GUI &kp RIGHT_CONTROL
      >;
      sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_PREV C_NEXT>;
    };

    Base_Qwerty_layer {
      label = "QWERTY";
      bindings = <
        &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &trans &trans &kp A &kp S &kp D &kp F &trans &kp H &kp J &kp K &kp L &kp SEMICOLON &trans &trans &trans &trans &kp C &kp V &kp B &trans &trans &kp N &kp M &kp COMMA &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
      >;
    };

    Nav_layer {
      label = "Nav";
      bindings = <
        &trans &none &none &none &none &none &none &none &none &none &none &trans &trans &kp LG(Q) &kp LG(W) &hm_l LS(LC(LG(LALT))) LS(LC(TAB)) &kp LC(TAB) &kp LG(GRAVE) &kp PG_UP &kp LA(LEFT) &kp UP &kp LA(RIGHT) &none &trans &trans &kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_GUI &td_shift_l &none &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &none &trans &trans &kp LG(Z) &kp LG(X) &hm_l LC(LG(LALT)) LG(C) &kp LG(V) &kp LG(V) &trans &kp SPACE &none &kp LG(LEFT) &none &kp LG(RIGHT) &none &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
      >;
      sensor-bindings = <&inc_dec_kp C_BRI_DN C_BRI_UP &inc_dec_kp LEFT RIGHT>;
    };

    Sym_layer {
      label = "Sym";
      bindings = <
        &trans &none &none &none &none &none &none &none &none &none &none &trans &trans &none &kp CARET &hm_l LS(LC(LG(LALT))) PIPE &kp AMPERSAND &kp PLUS &kp TILDE &mm_bracket_r &mm_bracket_sq &mm_bracket_c &kp GRAVE &trans &trans &kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT_GUI &td_shift_l &kp EQUAL &kp PERCENT &kp EXCLAMATION &td_at_email &kp HASH &kp ASTERISK &kp GRAVE &trans &kp SLASH &none &kp LC(LG(LALT)) &none &kp MINUS &trans &trans &kp UNDERSCORE &kp DOLLAR &kp SEMICOLON &kp COLON &kp BACKSLASH &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
      >;
      sensor-bindings = <&inc_dec_kp C_BRI_DN C_BRI_UP &inc_dec_kp LEFT RIGHT>;
    };

    Num_layer {
      label = "Num";
      bindings = <
        &kp F12 &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &trans &kp DOT &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp PLUS &kp TILDE &mm_bracket_r &kp RS(RC(RG(RALT))) &none &none &trans &trans &kp ASTERISK &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp EQUAL &kp PERCENT &td_shift_r &kp RIGHT_GUI &kp RIGHT_ALT &kp RIGHT_CONTROL &trans &trans &kp SLASH &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp MINUS &trans &trans &kp UNDERSCORE &kp DOLLAR &hm_r RC(RG(RALT)) COMMA &kp DOT &kp SLASH &trans &trans &trans &trans &kp NUMBER_0 &trans &trans &trans &trans &trans &trans
      >;
      sensor-bindings = <&inc_dec_kp C_BRI_DN C_BRI_UP &inc_dec_kp LEFT RIGHT>;
    };

    Func_layer {
      label = "Func";
      bindings = <
        &trans &none &none &none &none &none &none &none &none &none &none &trans &trans &kp F12 &kp F7 &kp F8 &kp F9 &none &none &none &kp RS(RC(RG(RALT))) &none &none &trans &trans &kp F11 &kp F4 &kp F5 &kp F6 &none &none &td_shift_r &kp RIGHT_GUI &kp RIGHT_ALT &kp RIGHT_CONTROL &trans &trans &kp F10 &kp F1 &kp F2 &kp F3 &none &trans &trans &none &none &kp RC(RG(RALT)) &none &none &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
      >;
      sensor-bindings = <&inc_dec_kp C_BRI_DN C_BRI_UP &inc_dec_kp LEFT RIGHT>;
    };

    Adjust_layer {
      label = "Adjust";
      bindings = <
        &bt BT_CLR &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 &none &none &none &none &none &to BASE &ext_power EXT_POWER_TOGGLE_CMD &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF &none &none &none &none &none &to BASE_QWERTY &none &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &rgb_ug RGB_TOG &kp SPACE &none &none &none &none &none &none &trans &trans &trans &none &none &none &none &none &none &none
      >;
      sensor-bindings = <&inc_dec_kp C_BRI_DN C_BRI_UP &inc_dec_kp LEFT RIGHT>;
    };

    Lower_layer {
      label = "Lower";
      bindings = <
        &kp F12 &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp TILDE &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0 &trans &trans &kp EXCLAMATION &kp AT_SIGN &kp HASH &kp DOLLAR &kp PERCENT &kp CARET &kp AMPERSAND &kp ASTERISK &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp PIPE &trans &kp EQUAL &kp MINUS &kp PLUS &kp LEFT_BRACE &kp RIGHT_BRACE &trans &kp SPACE &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp SEMICOLON &kp COLON &kp BACKSLASH &trans &trans &trans &trans &kp UNDERSCORE &kp TILDE &kp DEL &trans &trans &trans &trans
      >;
      sensor-bindings = <&inc_dec_kp C_BRI_DN C_BRI_UP &inc_dec_kp LEFT RIGHT>;
    };
  };

};



// ZMK includes
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

// Personal includes
#include "includes/settings.dtsi"
#include "includes/settings_pd.dtsi"
#include "includes/conditional_layers.dtsi"
#include "includes/macros.dtsi"
#include "includes/combos.dtsi"
#include "includes/behaviours_homerow_mods.dtsi"
#include "includes/behaviours_mod_morph.dtsi"
#include "includes/behaviours_other.dtsi"


/ {

  /*
   * Keymap generated using https://www.keymapper.dev/
   * Import sofle_keymap.json to view it.
   */

  keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = " COLEMAK";
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |   F5  |
// |  TAB  |  Q  |  W  |  F   |  P   |  G   |                   |  J   |   L   |   U   |  Y   |   ;   |   \   |
// | CAPS  |  A  |  R  |  S   |  T   |  D   |                   |  H   |   N   |   E   |  I   |   O   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  C_PP  |  |  F5   |  K   |   M   |   ,   |  .   |   /   | SHIFT |
//               |ALT | CTRL  | LGUI | LOWER|  SPACE |  | ENTER | RAISE|  BSPC |  CTRL | DEL  |
            bindings = <
&kp ESC    &kp N1  &kp N2     &kp N3     &kp N4    &kp N5                          &kp N6  &kp N7     &kp N8     &kp N9   &kp N0    &kp F5
&kp TAB    &kp Q   &kp W      &kp F      &kp P     &kp G                           &kp J   &kp L      &kp U      &kp Y    &kp SEMI  &kp BSLH
&kp CAPS   &kp A   &kp R      &kp S      &kp T     &kp D                           &kp H   &kp N      &kp E      &kp I    &kp O     &kp SQT
&kp LSHFT  &kp Z   &kp X      &kp C      &kp V     &kp B   &kp C_PP    &kp F5      &kp K   &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                   &kp LALT   &kp LCTRL  &kp LGUI  &mo 1   &kp SPACE   &kp ENTER   &mo 2   &kp BSPC   &kp RCTRL  &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp UP DOWN>;
        };

        lower_layer {
          label = " LOWER";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |  C_PP  |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8          &kp N9    &kp N0    &kp F12
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp PIPE
&trans    &kp EQUAL &kp MINUS &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans &kp LBKT  &kp RBKT &kp SEMI        &kp COLON &kp BSLH  &trans
                    &trans    &trans      &trans    &trans    &trans   &trans &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp UP DOWN>;
        };

        raise_layer {
         label = " RAISE";
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                   &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                 &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans  &trans    &trans    &trans   &trans    &trans  &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp UP DOWN>;
        };

// ------------------------------------------------------------------------------------------------------------
// |BTCLR | BT1   | BT2   |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
// |EXTPWR|RGB_HUD|RGB_HUI|RGB_SAD|RGB_SAI|RGB_EFF|                |      |      |       |      |       |       |
// |      |RGB_BRD|RGB_BRI|       |       |       |                |      |      |       |      |       |       |
// |      |       |       |       |       |       |RGB_TOG| |      |      |      |       |      |       |       |
//                |       |       |       |       |       | |      |      |      |       |      |

        Adjust_layer {
            label = " ADJUST";
        bindings = <
&bt BT_CLR                      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                                    &none &none &none &none &none &none
&ext_power EXT_POWER_TOGGLE_CMD &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                                 &none &none &none &none &none &none
&none                           &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none           &none           &none                                           &none &none &none &none &none &none
&none                           &none           &none           &none           &none           &none               &rgb_ug RGB_TOG  &none      &none &none &none &none &none &none
                                                &none           &none           &none           &none               &none            &none      &none &none &none &none
        >;
        };

    };
};
